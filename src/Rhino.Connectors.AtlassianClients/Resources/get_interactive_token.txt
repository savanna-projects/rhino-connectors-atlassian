{
    "query": "\nquery issueViewInteractiveQuery($issueKey: String!, $projectKey: String)  {\n        \n    jira {\n        ecosystemFirstSeenOnIssueView\n    }\n\n        mediaContext(issueKey: $issueKey) {\n    userToken {\n      token\n      id\n      issueId\n      tokenDurationInMins\n    }\n    uploadToken {\n      __typename\n      ... on MediaUploadToken {\n        endpointUrl\n        token\n        targetCollection\n        tokenDurationInMins\n        clientId\n      }\n      ... on FailedMediaUploadToken {\n        error\n      }\n    }\n    readToken(maxTokenLength: 65536) {\n      clientId\n      endpointUrl\n      tokensWithFiles {\n        files {\n          issueId\n          attachmentId\n          attachmentMediaApiId\n        }\n        token\n      }\n      tokenLifespanInSeconds\n    }\n  }\n        \n    viewIssue(issueKey: $issueKey) {\n        \n        isArchived\n        \n        comments (first: 0, maxResults: 5, orderBy: \"-created\") {\n            nodes {\n                id\n                author {\n                    accountId\n                    displayName\n                    avatarUrl\n                }\n                updateAuthor {\n                    accountId\n                    displayName\n                    avatarUrl\n                }\n                 jiraCommentVisibility {\n    __typename\n    ...on JiraRoleVisibility {\n      name\n    }\n    ...on JiraGroupVisibility {\n      group {\n        groupId\n        name\n      }\n    }\n  }\n                created\n                updated\n                jsdPublic\n                bodyAdf\n                jsdAuthorCanSeeRequest\n                \n                \n            }\n            totalCount\n            startIndex\n        }\n    \n        \n        \n    ecosystem {\n      \n      operations {\n        name\n        url: href\n        icon {\n          url\n        }\n        tooltip\n        styleClass\n      }\n        \n      activityPanels {\n        name\n        iframe {\n          addonKey\n          moduleKey\n          options\n        }\n      }\n      backgroundScripts {\n        iframe {\n          addonKey\n          moduleKey\n          options\n        }\n        shouldReloadOnRefresh\n      }\n      contextPanels {\n        name\n        iframe {\n          addonKey\n          moduleKey\n          options\n        }\n        icon {\n          url\n        }\n        content\n        status\n        type\n      }\n      \n      forge {\n        panels {\n          id\n          instances {\n            id\n            collapsed\n            added\n          }\n        }\n      }\n    }\n\n        \n    \n    contentPanels {\n        edges {\n            node {\n                \n    name\n    addonKey\n    moduleKey\n    options\n    iconUrl\n    tooltip\n    type\n    isShownByDefault\n    wasManuallyAddedToIssue\n\n            }\n        }\n    }\n\n    \n    legacyContentPanels {\n        edges {\n            node {\n                \n    name\n    addonKey\n    moduleKey\n    options\n    iconUrl\n    tooltip\n    type\n    isShownByDefault\n    wasManuallyAddedToIssue\n\n            }\n        }\n    }\n\n    hasCustomisedContentPanels\n\n        \n        \n        glancesField {\n          fieldKey\n          value {\n            name\n            status\n            iframe {\n              addonKey\n              moduleKey\n              options\n            }\n            icon {\n              url\n            }\n            content\n            type\n          }\n        }\n      \n        attachments(orderDirection: DESC, orderField: CREATED, maxResults: 12) {\n        nodes {\n          id\n          filename\n          mimetype\n          mediaApiFileId\n          createdDate\n          filesize\n          parentName\n          author {\n              accountId\n          }\n          parentId\n          hasRestrictedParent\n        }\n        totalCount\n        deletableCount\n      }\n\n        \ncontainersByType(input:{systemContainerTypes: [CONTENT, PRIMARY, SECONDARY, REQUEST_PORTAL], supportDefaultTab: true}) {\n__typename\n... on JiraIssueItemContainers {\ncontainers {\n  containerType\n  items {\n    nodes {\n      type: __typename\n      ... on JiraIssueItemFieldItem {\n        fieldItemId        \n      }\n      ... on JiraIssueItemPanelItem {\n        panelItemId\n      }\n      ... on JiraIssueItemTabContainer {\n        name\n        tabContainerId              \n        items {\n          nodes {\n            type: __typename\n            ... on JiraIssueItemFieldItem {\n              fieldItemId\n            }\n          }\n        }\n      }\n    }\n  }\n}\n}\n}\n\n        \n    remoteLinks {\n        isLinkingEnabled\n        remoteLinkedIssues {\n            preview {\n                id\n                issueId\n                globalId\n                href\n                applicationType\n                applicationName\n                relationship\n                title\n            }\n        }\n    }            \n\n    }\n\n        \n    jiraSettings {\n      newIssueViewTransitionSettings {\n        shouldDelayChangeboarding\n        newIssueViewTransitionLockingStatus\n     }\n    }\n\n        \n    permissions(issueKey:$issueKey, keys:[\"ADMINISTER\",\"ADMINISTER_PROJECTS\",\"ASSIGN_ISSUES\",\"EDIT_ISSUES\",\"SCHEDULE_ISSUES\",\"ADD_COMMENTS\",\"DELETE_ALL_COMMENTS\",\"DELETE_OWN_COMMENTS\",\"EDIT_ALL_COMMENTS\",\"EDIT_OWN_COMMENTS\",\"CREATE_ISSUES\",\"DELETE_ISSUES\",\"MOVE_ISSUES\",\"MODIFY_REPORTER\",\"CREATE_ATTACHMENTS\",\"DELETE_ALL_ATTACHMENTS\",\"DELETE_OWN_ATTACHMENTS\",\"WORK_ON_ISSUES\",\"ASSIGNABLE_USER\",\"LINK_ISSUES\",\"VIEW_VOTERS_AND_WATCHERS\",\"MANAGE_WATCHERS\",\"EDIT_ALL_WORKLOGS\",\"EDIT_OWN_WORKLOGS\",\"DELETE_ALL_WORKLOGS\",\"DELETE_OWN_WORKLOGS\",\"USER_PICKER\",\"VIEW_DEV_TOOLS\",\"SERVICEDESK_AGENT\",\"RESOLVE_ISSUES\",\"CREATE_SUBTASK\",\"CLONE_ISSUE\"]) {\n        key\n        havePermission\n    }\n\n        \n        \n    project(projectKey: $projectKey) {\n        id\n        newIssueViewLockedIn\n        issueTypes {\n            id\n            name\n            iconUrl\n            subtask\n        }\n    }\n\n        \n    }\n\n",
    "variables": {
        "issueKey": "[issue-key]",
        "projectKey": "[project-key]"
    },
    "operationName": "issueViewInteractiveQuery"
}